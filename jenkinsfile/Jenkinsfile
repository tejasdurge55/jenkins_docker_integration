// node {
//     def app

//     stage('Clone repository') {
//         /* Let's make sure we have the repository cloned to our workspace */

//         checkout scm
//     }

//     stage('Build image') {
//         /* This builds the actual image; synonymous to
//          * docker build on the command line */

//         app = docker.build("tejasdurge55/node-dice-jenkins")
//     }

//     stage('Test image') {
//         /* Ideally, we would run a test framework against our image.
//          * For this example, we're using a Volkswagen-type approach ;-) */

//         app.inside {
//             sh 'echo "Tests passed"'
//         }
//     }

//     stage('Push image') {
//         /* Finally, we'll push the image with two tags:
//          * First, the incremental build number from Jenkins
//          * Second, the 'latest' tag.
//          * Pushing multiple tags is cheap, as all the layers are reused. */
//         docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {
//             app.push("${env.BUILD_NUMBER}")
//             app.push("latest")
//         }
//     }
// }

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------
// pipeline {

//   environment {
//     dockerimagename = "tejasdurge55/dice-nodeapp-gitsync"
//     dockerImage = ""
//   }

//   agent any

//   stages {

//     stage('Checkout Source') {
//       steps {
//         git 'https://github.com/tejasdurge55/jenkins_docker_integration.git'
//       }
//     }

//     stage('Build image') {
//       steps{
//         script {
//           dockerImage = docker.build dockerimagename
//         }
//       }
//     }

//     stage('Pushing Image') {
//       environment {
//                registryCredential = 'docker-hub-credentials'
//            }
//       steps{
//         script {
//           docker.withRegistry( 'https://registry.hub.docker.com', registryCredential ) {
//             dockerImage.push("latest")
//           }
//         }
//       }
//     }

//     stage('Deploying container to Kubernetes') {
//       steps {
//         script {
//           kubernetesDeploy(configs: "deployment.yaml")
//         }
//       }
//     }

//   }

// }

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------

// pipeline {
    
//     agent any 
    
//     environment {
//          IMAGE_TAG = "${BUILD_NUMBER}"
//         dockerimagename = "tejasdurge55/dice-nodeapp-gitsync:'${BUILD_NUMBER}'"
//         dockerImage = ""
//     }
    
//     stages {
        
//         stage('Checkout'){
//            steps {
//                 git 'https://github.com/tejasdurge55/jenkins_docker_integration.git'
//            }
//         }

//         stage('Build Docker'){
//             steps{
//                 script{
//                     dockerImage = docker.build dockerimagename
//                 }
//             }
//         }

//         stage('Push the artifacts'){
//             environment {
//                registryCredential = 'docker-hub-credentials'
//             }
//             steps{
//                 script {
//                     docker.withRegistry( 'https://registry.hub.docker.com', registryCredential ) {
//                    dockerImage.push()
//                    // dockerImage.push("latest")
//                     }
//                 }
//             }
//         }
        
//         stage('Checkout kubernetes deployment files'){
//            steps {
//                 git 'https://github.com/tejasdurge55/dice-game-git-sync-node.git'
//                 // git url: "ssh://git@github.com:tejasdurge55/jenkins_docker_integration.git",
//                  //  credentialsId: 'anyuser'
//            }
//         }
        
//         stage('Update K8S manifest & push to Repo'){
//             environment {
//             GIT_REPO_NAME = "dice-game-git-sync-node"
//             GIT_USER_NAME = "tejasdurge55"
//         }
//             steps {
              

//  withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
//                     sh '''
//                         git config user.email "tejas.y.durge@gmail.com"
//                         git config user.name "Tejas Yogesh Durge"
//                         current_number=$(head -n 1 argo-cd-folder/deployment.yaml | sed 's/#//')

//                         # Increment the number by 1
//                         new_number=$((current_number + 1))
//                         BUILD_NUMBER=${BUILD_NUMBER}
//                         # Replace the first line in deployment.yaml with the new number
//                         sed -i "1s/.*/#$new_number/" argo-cd-folder/deployment.yaml
//                           # Replace with your actual BUILD_NUMBER

//                         # Use sed to replace the image tag
//                         sed -i '36s|image: tejasdurge55/dice-nodeapp-gitsync|image: tejasdurge55/dice-nodeapp-gitsync:'"$BUILD_NUMBER"'|' argo-cd-folder/deployment.yaml
//                         # Display the updated file
//                         cat argo-cd-folder/deployment.yaml                        
//                         git add argo-cd-folder/deployment.yaml
//                         git commit -m "Update deployment image to new version"
//                         git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
//                     '''
                    
//                 }
//             }
//         }
//     }
// }
//---------------------------------------------------------------------------------------------------------------
// pipeline {
//     agent any
    
//     environment {
//         IMAGE_TAG = "${BUILD_NUMBER}"
//         DOCKER_IMAGE_NAME = "tejasdurge55/dice-nodeapp-gitsync:${BUILD_NUMBER}"
//     }
    
//     stages {
//         stage('Checkout') {
//             steps {
//                 git 'https://github.com/tejasdurge55/jenkins_docker_integration.git'
//             }
//         }

//         stage('Build Docker') {
//             steps {
//                 script {
//                     dockerImage = docker.build(DOCKER_IMAGE_NAME)
//                 }
//             }
//         }

//         stage('Push the artifacts') {
//             environment {
//                 registryCredential = 'docker-hub-credentials'
//             }
//             steps {
//                 script {
//                     docker.withRegistry('https://registry.hub.docker.com', registryCredential) {
//                         dockerImage.push()
//                     }
//                 }
//             }
//         }

//         stage('Checkout kubernetes deployment files') {
//             steps {
//                 git 'https://github.com/tejasdurge55/dice-game-git-sync-node.git'
//             }
//         }

//         stage('Update K8S manifest & push to Repo') {
//             environment {
//                 GIT_REPO_NAME = "dice-game-git-sync-node"
//                 GIT_USER_NAME = "tejasdurge55"
//             }
//             steps {
//                 withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
//                     script {
//                         // def current_number = readFile('argo-cd-folder/deployment.yaml').trim().replaceFirst('#', '')
//                         // def new_number = (current_number as Integer) + 1
//                         // BUILD_NUMBER = new_number.toString()
//                         // sed -i "1s/.*/#$new_number/" argo-cd-folder/deployment.yaml
//                         //     sed -i '36s|image: tejasdurge55/dice-nodeapp-gitsync|image: tejasdurge55/dice-nodeapp-gitsync:'"$BUILD_NUMBER"'|' argo-cd-folder/deployment.yaml


//                         sh '''
//                             git config user.email "tejas.y.durge@gmail.com"
//                             git config user.name "Tejas Yogesh Durge"

                           
// deployment_file="argo-cd-folder/deployment.yaml"

// # Get the current BUILD_NUMBER
//   # Replace with the actual BUILD_NUMBER

// # Check if there's an existing image tag
// existing_image_tag=$(grep -oE 'image: [^ ]+' "$deployment_file" | sed 's/image: //')

// if [ -z "$existing_image_tag" ]; then
//   # If there's no existing image tag, just add the BUILD_NUMBER
//   new_image_tag="image: tejasdurge55/dice-nodeapp-gitsync:${BUILD_NUMBER}"
// else
//   # If there's an existing image tag, remove it and add the BUILD_NUMBER
//   new_image_tag="image: tejasdurge55/dice-nodeapp-gitsync:${BUILD_NUMBER}"
//   sed -i "s/image: $existing_image_tag/$new_image_tag/g" "$deployment_file"
// fi

// # Display the updated deployment.yaml
// cat "$deployment_file"
//                             cat argo-cd-folder/deployment.yaml
//                             git add argo-cd-folder/deployment.yaml
//                             git commit -m "Update deployment image to new version"
//                             git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
//                         '''
//                     }
//                 }
//             }
//         }
//     }
// }
//--------------------------------------------------------------------------------
pipeline {
    agent any
    
    environment {
        IMAGE_TAG = "${BUILD_NUMBER}"
        DOCKER_IMAGE_NAME = "tejasdurge55/dice-nodeapp-gitsync:${BUILD_NUMBER}"
    }
    
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/tejasdurge55/jenkins_docker_integration.git'
            }
        }

        stage('Build Docker') {
            steps {
                script {
                    dockerImage = docker.build(DOCKER_IMAGE_NAME)
                }
            }
        }

        stage('Push the artifacts') {
            environment {
                registryCredential = 'docker-hub-credentials'
            }
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', registryCredential) {
                        // Push the Docker image
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Checkout kubernetes deployment files') {
            steps {
                git 'https://github.com/tejasdurge55/dice-game-git-sync-node.git'
            }
        }

        stage('Update K8S manifest & push to Repo') {
            environment {
                GIT_REPO_NAME = "dice-game-git-sync-node"
                GIT_USER_NAME = "tejasdurge55"
            }
            steps {
                withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
                    script {
                        def deployment_file = 'argo-cd-folder/deployment.yaml'

                        // Get the current BUILD_NUMBER
                        def current_number = BUILD_NUMBER

                        // Check if there's an existing image tag
                        def existing_image_tag = sh(script: "grep -oE 'image: [^ ]+' $deployment_file | sed 's/image: //'", returnStdout: true).trim()

                        if (existing_image_tag.isEmpty()) {
                            // If there's no existing image tag, just add the BUILD_NUMBER
                            existing_image_tag = ''
                        }

                        // Update the image tag in the deployment.yaml file
                       // sh "sed -i '36s|image: tejasdurge55/dice-nodeapp-gitsync:$existing_image_tag|image: tejasdurge55/dice-nodeapp-gitsync:$current_number|' $deployment_file"

                        // Display the updated deployment.yaml
                        //sh "cat $deployment_file"

                        // Commit and push the changes to the Git repository
                        sh '''
                        
                        
                        # Define the replacement value
                        replacement="tejasdurge55/dice-nodeapp-gitsync:\"${BUILD_NUMBER}\""
                        
                        # Use sed to replace line 36 in the file
                        sed -i '36s@.*@'"$replacement"'@' argo-cd-folder/deployment.yaml
                        git config user.email "tejas.y.durge@gmail.com"
                        git config user.name "Tejas Yogesh Durge"
                        git add .
                        git commit -m "Update deployment image to new version"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                    '''
                    }
                }
            }
        }
    }
}
